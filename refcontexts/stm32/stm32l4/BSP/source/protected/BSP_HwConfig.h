/********************************************************************************
* Copyright (c) 2010-2019 Robert Bosch GmbH
*
* This program and the accompanying materials are made available under the
* terms of the Eclipse Public License 2.0 which is available at
* http://www.eclipse.org/legal/epl-2.0.
*
* SPDX-License-Identifier: EPL-2.0
*
* Contributors:
*    Robert Bosch GmbH - initial contribution
*
********************************************************************************/

#ifndef BSP_HWCONFIG_H_
#define BSP_HWCONFIG_H_

/**
 *  @ingroup BSP_BOARD
 *  @file
 *  @brief Board configuration header file auto-generated by the BSE Hardware Configuration Tool.
 *
 * The configuration header provides configuration settings for the BSE R3.2 hardware sample.
 */

/* Include all headers which are needed by this file. */

#include <stdint.h>

/* Put the type and macro definitions here */

#define HW_I2C1_TIMING  UINT32_C(0x2010091A) /**< Targeted I2C1 fCLK is 400 kHz. */
#define HW_I2C2_TIMING  UINT32_C(0x2010091A) /**< Targeted I2C1 fCLK is 400 kHz. */

#define HW_LSE_WORST_CASE_PPM_RATE UINT32_C(135) /**< Wost case LSE clock tolerance is 135 ppm in the temperature range of -20 to 50 degrees Celsius with a life time of 5 years. */
#define HW_LSE_OSC_DRIVE_CAPABILITY (LL_RCC_LSEDRIVE_LOW) /**< Parameter to be used with @sa LL_RCC_LSE_SetDriveCapability(). */

#define HW_ADC_VEXT_SCALING_DIVIDEND UINT32_C(2658) /**< Dividend part of the external battery voltage specific AD scaling factor. */
#define HW_ADC_VEXT_SCALING_DIVISOR UINT32_C(51824) /**< Divisor part of the external battery voltage specific AD scaling factor. */
#define HW_ADC_VEXT_SAMPLING_TIME (ADC_SAMPLETIME_247CYCLES_5) /**< External battery voltage ADC sampling time (Ts) is 247,5 us. */

#define HW_ADC_VBAT_SCALING_DIVIDEND UINT32_C(2658) /**< Dividend part of the internal battery voltage specific AD scaling factor. */
#define HW_ADC_VBAT_SCALING_DIVISOR UINT32_C(187556) /**< Divisor part of the internal battery voltage specific AD scaling factor. */
#define HW_ADC_VBAT_SAMPLING_TIME (ADC_SAMPLETIME_92CYCLES_5) /**< Internal battery voltage ADC sampling time (Ts) is 92,5 us. */

#define HW_ADC_IBAT_SCALING_DIVIDEND UINT32_C(2658) /**< Dividend part of the internal battery charging current specific AD scaling factor. */
#define HW_ADC_IBAT_SCALING_DIVISOR UINT32_C(3016166) /**< Divisor part of the internal battery charging current specific AD scaling factor. */
#define HW_ADC_IBAT_SAMPLING_TIME (ADC_SAMPLETIME_47CYCLES_5) /**< Internal battery charging current ADC sampling time (Ts) is 47,5 us. */

#define HW_ADC_VREFINT_SAMPLING_TIME (ADC_SAMPLETIME_247CYCLES_5) /**< Internal voltage reference ADC sampling time (Ts) is 247,5 us. */
#define HW_ADC_VTS_SAMPLING_TIME (ADC_SAMPLETIME_247CYCLES_5) /**< Internal temperature sensor ADC sampling time (Ts) is 247,5 us. */

#define HW_LDO_TLV70233_STARTUP_TIME UINT32_C(1) /**< Time from EN assertion to 0.98 VOUT(nom) is 100 us. */

#define HW_3V3_DISCHARGE_TIME UINT32_C(100) /**< @todo BCDS/ENG1: provide accurate value Time to discharge the 3V3 power line through the two I2C pullup resistors */

#define HW_LM2755_POWER_ON_TIME_DELAY UINT32_C(10) /**< Time from HWEN assertion to LM2755 I2C bus ready to receive state is 10000 us. */

/* Put the function declarations here */

#endif /* BSP_HWCONFIG_H_ */

