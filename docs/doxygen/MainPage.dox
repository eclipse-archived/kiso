/**
 * @{
 * @mainpage   Documentation Home
 * @copyright  Robert Bosch GmbH
 * @brief      Kiso API Documentation
 *             \image html Kiso-logo.png
 *
 *
 * @section    KISO_REFBOARDS_LICENCE License
 *
 * @note       This program and the accompanying materials are made available under the
 *             terms of the Eclipse Public License 2.0 which is available at
 *             http://www.eclipse.org/legal/epl-2.0. \n
 *             SPDX-License-Identifier: EPL-2.0
 *
 * @section OVERVIEW Overview
 *
 * Eclipse Kiso was designed from scratch as a software development kit for IoT devices and has already been used
 * and verified on a handful of existing products in the market. Eclipse Kiso's reusability, robustness and portability
 * is a key factor which enables fast development and quick time to market for almost all kinds of IoT "Things" product
 * development. \n
 * Kiso can be represented with the following architecture overview: \n
 * \image html Kiso-overview.png
 * \image html legend.png
 *
 *
 * @section FOLDER_STRUCT Folder Structure
 *
 * **Kiso** repository is composed by the following folders:
 * * **boards** contains different Hardware platforms with Kiso support. Each of the HW have a separate directory, containing:
 *     * A **bsp** (board support package) abstracting Essentials.
 *     * A **config** containing the Kiso module board-specific configurations.
 * * **core** contains the different Kiso components. The following modules are today existing:
 *     * **essentials** contains the hardware abstraction from the board and MCU. It also contains "essentials" modules such as error-handling. See \ref KISO_ESSENTIALS
 *     * **utils** contains RTOS abstractions modules, but also logging, circular-buffers, etc... See \ref UTILS
 *     * **connectivity/cellular** contains the driver that allows us to communicate with u-blox SARA via CAT-M1 or NB-IoT. See \ref KISO_CELLULAR
 * * **ci** contains the continuous-integration elements such as docker-files and integration-test settings.
 * * **cmake** contains *.cmake scripts, reffered by the main CMakeLists.txt file during building.
 * * **config** contains configuration headers for the Kiso modules and thirdparty libraries.
 * * **docs** contains the documentation.
 * * **examples** contains different examples running on a specific hardware.
 * * **thirdparty** contains different source-code of third-parties needed by Kiso.
 *
 * @section BUILD_STRUCT Build Structure
 *
 * Each Kiso modules need a configuration file. These files allows to enable/disable different features,
 * but also define a configuration for these features. These configurations can be found in the folder `boards/<board_name>/kiso_config`.
 *
 * The build structure respecting the following sequence:
 * * `thirdparty` libraries need to be build with the specific configurations of Kiso.
 * * The BSP library needs to be build with the specific configuration of Kiso.
 * * All the `core` libraries need to be build with the configuration of Kiso.
 * * The Application needs dependencies to all the previous build libraries to be buildable.
 *
 *
 @}
*/

/* GROUPS DEFINITION */

/**
* @{
* @defgroup KISO_CORE Core
* @defgroup KISO_BOARDS Supported Hardware
* @defgroup KISO_EXAMPLES Examples
* @defgroup KISO_CONNECTIVITY Connectivity
* @ingroup KISO_CORE
* @{
 *
 * @brief       Provides APIs for different connectivity technologies and their implementations for specific hardware modules.
* @}
*/