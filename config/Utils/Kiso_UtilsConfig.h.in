/********************************************************************************
* Copyright (c) 2010-2019 Robert Bosch GmbH
*
* This program and the accompanying materials are made available under the
* terms of the Eclipse Public License 2.0 which is available at
* http://www.eclipse.org/legal/epl-2.0.
*
* SPDX-License-Identifier: EPL-2.0
*
* Contributors:
*    Robert Bosch GmbH - initial contribution
*
********************************************************************************/

/**
 * @file
 * @brief Utils config header.
 *
 * @details
 * ```
 *    ______ _____   _   _ _____ _____  ___  ______________ _____________   __
 *    |  _  \  _  | | \ | |  _  |_   _| |  \/  |  _  |  _  \_   _|  ___\ \ / /
 *    | | | | | | | |  \| | | | | | |   | .  . | | | | | | | | | | |_   \ V /
 *    | | | | | | | | . ` | | | | | |   | |\/| | | | | | | | | | |  _|   \ /
 *    | |/ /\ \_/ / | |\  \ \_/ / | |   | |  | \ \_/ / |/ / _| |_| |     | |
 *    |___/  \___/  \_| \_/\___/  \_/   \_|  |_/\___/|___/  \___/\_|     \_/
 *
 *
 *     _____ _   _ _____ _____   _   _  _____  ___ ______ ___________ _
 *    |_   _| | | |_   _/  ___| | | | ||  ___|/ _ \|  _  \  ___| ___ \ |
 *      | | | |_| | | | \ `--.  | |_| || |__ / /_\ \ | | | |__ | |_/ / |
 *      | | |  _  | | |  `--. \ |  _  ||  __||  _  | | | |  __||    /| |
 *      | | | | | |_| |_/\__/ / | | | || |___| | | | |/ /| |___| |\ \|_|
 *      \_/ \_| |_/\___/\____/  \_| |_/\____/\_| |_/___/ \____/\_| \_(_)
 * ```
 *
 * This file is managed through cmake! The <headername>.h.in file acts as the
 * template for generating the "real" header during cmakes' configure stage.
 * This generated header will be placed in your CMAKE_CURRENT_BINARY_DIR and
 * included during building.
 *
 * In the template we refer to cmake variables through ${XYZ} or @XYZ@ notation.
 * Any such occurrence will be populated by cmake with the coresponding variable
 * value.
 *
 * The intended way of modifying values in this header is:
 *  A) Through the <headername>.cmake file located either in either the boards'
 *     or the apps' config folder.
 *  B) Through command line options such as:
 *     `$ cmake --build <BUILD_DIR> -D <VAR>=<VAL>`
 *     Where <VAR> is the name of a cmake variable and <VAL> it's associated
 *     value.
 *
 * Provides configuration interface for the Utils components.
 */

#ifndef KISO_UTILSCONFIG_H_
#define KISO_UTILSCONFIG_H_

#ifndef KISO_FEATURE_CMDLINEDEBUGGER
/** @brief Enable (1) or disable (0) the CmdLineDebugger feature. */
// clang-format off
#define KISO_FEATURE_CMDLINEDEBUGGER (${CFG_KISO_FEATURE_CMDLINEDEBUGGER})
// clang-format on
#endif

#ifndef KISO_FEATURE_CMDPROCESSOR
/** @brief Enable (1) or disable (0) the CmdProcessor feature. */
// clang-format off
#define KISO_FEATURE_CMDPROCESSOR (${CFG_KISO_FEATURE_CMDPROCESSOR})
// clang-format on
#endif

#ifndef KISO_FEATURE_CRC
/** @brief Enable (1) or disable (0) the Crc feature. */
// clang-format off
#define KISO_FEATURE_CRC (${CFG_KISO_FEATURE_CRC})
// clang-format on
#endif

#ifndef KISO_FEATURE_EVENTHUB
/** @brief Enable (1) or disable (0) the EventHub feature. */
// clang-format off
#define KISO_FEATURE_EVENTHUB (${CFG_KISO_FEATURE_EVENTHUB})
// clang-format on
#endif

#ifndef KISO_FEATURE_GUARDEDTASK
/** @brief Enable (1) or disable (0) the GuardedTask feature. */
// clang-format off
#define KISO_FEATURE_GUARDEDTASK (${CFG_KISO_FEATURE_GUARDEDTASK})
// clang-format on
#endif


#ifndef KISO_FEATURE_ERRORLOGGER
/** @brief Enable (1) or disable (0) the ErrorLogger feature. */
// clang-format off
#define KISO_FEATURE_ERRORLOGGER (${CFG_KISO_FEATURE_ERRORLOGGER})
// clang-format on
#endif

#ifndef KISO_FEATURE_LOGGING
/** @brief Enable (1) or disable (0) the Logging feature. */
// clang-format off
#define KISO_FEATURE_LOGGING (${CFG_KISO_FEATURE_LOGGING})
// clang-format on
#endif

#ifndef KISO_FEATURE_RINGBUFFER
/** @brief Enable (1) or disable (0) the RingBuffer feature. */
// clang-format off
#define KISO_FEATURE_RINGBUFFER (${CFG_KISO_FEATURE_RINGBUFFER})
// clang-format on
#endif

#ifndef KISO_FEATURE_SLEEPCONTROL
/** @brief Enable (1) or disable (0) the SleepControl feature. */
// clang-format off
#define KISO_FEATURE_SLEEPCONTROL (${CFG_KISO_FEATURE_SLEEPCONTROL})
// clang-format on
#endif

#ifndef KISO_FEATURE_TASKMONITOR
/** @brief Enable (1) or disable (0) the TaskMonitor feature. */
// clang-format off
#define KISO_FEATURE_TASKMONITOR (${CFG_KISO_FEATURE_TASKMONITOR})
// clang-format on
#endif

#ifdef KISO_FEATURE_TASKMONITOR
/**
 * @brief KISO_TASKMONITOR_MAX_TASKS
 * Maximum number of TaskMonitor tickets to reserve for the system.
 */
// clang-format off
#define KISO_TASKMONITOR_MAX_TASKS (${CFG_KISO_TASKMONITOR_MAX_TASKS})
// clang-format on
#endif /* ifdef KISO_FEATURE_TASKMONITOR */

#ifndef KISO_FEATURE_TLV
/** @brief Enable (1) or disable (0) the Tlv feature. */
// clang-format off
#define KISO_FEATURE_TLV (${CFG_KISO_FEATURE_TLV})
// clang-format on
#endif

#ifndef KISO_FEATURE_UARTTRANSCEIVER
/** @brief Enable (1) or disable (0) the UartTransceiver feature. */
// clang-format off
#define KISO_FEATURE_UARTTRANSCEIVER (${CFG_KISO_FEATURE_UARTTRANSCEIVER})
// clang-format on
#endif

#ifndef KISO_FEATURE_I2CTRANSCEIVER
/** @brief Enable (1) or disable (0) the I2CTransceiver feature. */
// clang-format off
#define KISO_FEATURE_I2CTRANSCEIVER (${CFG_KISO_FEATURE_I2CTRANSCEIVER})
// clang-format on
#endif

#ifndef KISO_FEATURE_XPROTOCOL
/** @brief Enable (1) or disable (0) the XProtocol feature. */
// clang-format off
#define KISO_FEATURE_XPROTOCOL (${CFG_KISO_FEATURE_XPROTOCOL})
// clang-format on
#endif

#ifndef KISO_FEATURE_PIPEANDFILTER
/** @brief Enable (1) or disable (0) the pipe & filter pattern feature. */
// clang-format off
#define KISO_FEATURE_PIPEANDFILTER (${CFG_KISO_FEATURE_PIPEANDFILTER})
// clang-format on
#endif

#endif /* KISO_UTILSCONFIG_H_ */
