/**
 * Generated by Eclipse Mita 0.2.0.
 * @date 2019-04-24 17:25:20
 */


#ifndef CGWTYPES_H
#define CGWTYPES_H

#include "cgwTypes.h"
#include "stdint.h"


typedef struct {
	int16_t x;
	int16_t y;
	int16_t z;
} vec3d_16_t;
typedef struct {
	int32_t temperature;
	uint32_t humidity;
	uint32_t pressure;
} EnvironmentData_t;




typedef enum {
	BMA280_Range_Range_2G_e,
	BMA280_Range_Range_4G_e,
	BMA280_Range_Range_8G_e,
	BMA280_Range_Range_16G_e
} BMA280_Range_enum;

typedef struct {
	BMA280_Range_enum tag;
	union {
			} data;
} BMA280_Range_t;


typedef enum {
	BMA280_Bandwidth_BW_7_81Hz_e,
	BMA280_Bandwidth_BW_15_63Hz_e,
	BMA280_Bandwidth_BW_31_25Hz_e,
	BMA280_Bandwidth_BW_62_50Hz_e,
	BMA280_Bandwidth_BW_125Hz_e,
	BMA280_Bandwidth_BW_250Hz_e,
	BMA280_Bandwidth_BW_500Hz_e,
	BMA280_Bandwidth_BW_1000Hz_e
} BMA280_Bandwidth_enum;

typedef struct {
	BMA280_Bandwidth_enum tag;
	union {
			} data;
} BMA280_Bandwidth_t;


typedef enum {
	BME280_PowerMode_Normal_e,
	BME280_PowerMode_Forced_e
} BME280_PowerMode_enum;

typedef struct {
	BME280_PowerMode_enum tag;
	union {
			} data;
} BME280_PowerMode_t;


typedef enum {
	BME280_Oversampling_OVERSAMPLE_1X_e,
	BME280_Oversampling_OVERSAMPLE_2X_e,
	BME280_Oversampling_OVERSAMPLE_4X_e,
	BME280_Oversampling_OVERSAMPLE_8X_e,
	BME280_Oversampling_OVERSAMPLE_16X_e
} BME280_Oversampling_enum;

typedef struct {
	BME280_Oversampling_enum tag;
	union {
			} data;
} BME280_Oversampling_t;


typedef enum {
	LedColor_Red_e,
	LedColor_Green_e,
	LedColor_Blue_e
} LedColor_enum;

typedef struct {
	LedColor_enum tag;
	union {
			} data;
} LedColor_t;

#endif
